import { Decision } from '@/types/decision';

export const mockDecisions: Decision[] = [
  {
    id: '1',
    title: 'Recommendation Engine: Transformer vs DeepFM',
    description: 'Need to choose between Transformer-based and DeepFM models for our product recommendation system.',
    context: 'Need to choose between Transformer-based and DeepFM models for our product recommendation system. Current CTR is 2.1% and we need to improve to 3.5% to meet Q4 targets.',
    options: ['Transformer-based Model', 'DeepFM Model'],
    constraints: ['Must maintain <100ms inference time', 'Budget limited to $60k', 'Need to ship before Black Friday'],
    metrics: ['CTR improvement', 'Inference latency', 'Development cost'],
    stakeholders: ['alex@company.com', 'sarah@company.com'],
    status: 'open',
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-20'),
    priority: 'high',
    createdBy: 'demo@pmarchitect.ai',
    tags: ['Transformer', 'DeepFM', 'Latency-sensitive', 'Cost-sensitive'],
  },
  {
    id: '2',
    title: 'Database Migration: PostgreSQL to ClickHouse',
    description: 'Our analytics queries are taking 15+ seconds on PostgreSQL. Need to migrate to a columnar database.',
    context: 'Our analytics queries are taking 15+ seconds on PostgreSQL. Need to migrate to a columnar database for better performance on large-scale analytics.',
    options: ['ClickHouse', 'PostgreSQL with TimescaleDB'],
    constraints: ['Must maintain data consistency', 'Zero downtime requirement', 'Team needs to be trained'],
    metrics: ['Query performance', 'Setup complexity', 'Maintenance overhead'],
    stakeholders: ['john@company.com', 'emma@company.com'],
    status: 'pending',
    createdAt: new Date('2024-01-10'),
    updatedAt: new Date('2024-01-18'),
    priority: 'critical',
    createdBy: 'demo@pmarchitect.ai',
    tags: ['ClickHouse', 'PostgreSQL', 'Cost-sensitive', 'Analytics'],
  },
  {
    id: '3',
    title: 'Microservices vs Monolith for New Feature',
    description: 'Building a real-time collaboration feature for our document editor.',
    context: 'Building a real-time collaboration feature for our document editor. Need to decide between microservices architecture or extending the existing monolith.',
    options: ['Microservices Architecture', 'Monolith Extension'],
    constraints: ['Must support 10k concurrent users', 'Real-time latency <50ms', 'Feature needed by Q2'],
    metrics: ['Development speed', 'Scalability', 'Operational complexity'],
    stakeholders: ['mike@company.com', 'lisa@company.com'],
    status: 'resolved',
    createdAt: new Date('2023-12-01'),
    updatedAt: new Date('2024-01-15'),
    priority: 'medium',
    createdBy: 'demo@pmarchitect.ai',
    tags: ['Microservices', 'Monolith', 'Latency-sensitive', 'Architecture'],
  },
  {
    id: '4',
    title: 'Feature Priority: AI Assistant vs Advanced Analytics',
    description: 'Limited engineering resources for Q1. Need to choose between building an AI-powered assistant or advanced analytics dashboard.',
    context: 'Limited engineering resources for Q1. Need to choose between building an AI-powered assistant or advanced analytics dashboard. Both have strong user demand.',
    options: ['AI Assistant', 'Advanced Analytics'],
    constraints: ['Q1 deadline', 'Limited to 3 engineers', 'Must improve user retention'],
    metrics: ['User engagement', 'Development complexity', 'ROI potential'],
    stakeholders: ['david@company.com', 'anna@company.com'],
    status: 'pending',
    createdAt: new Date('2024-01-05'),
    updatedAt: new Date('2024-01-12'),
    priority: 'high',
    createdBy: 'demo@pmarchitect.ai',
    tags: ['AI Assistant', 'Analytics', 'Explainability'],
  }
]; 